{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/DELL/Desktop/AMIAPP/amiapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject } from '@angular/core';\n//import { Auth, authState, createUserWithEmailAndPassword, UserCredential } from '@angular/fire/auth';\nimport { Auth, GithubAuthProvider, GoogleAuthProvider, authState, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup } from '@angular/fire/auth';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    signInWithPopup(provider) {\n      throw new Error('Method not implemented.');\n    }\n    auth = inject(Auth);\n    authState$ = authState(this.auth);\n    currentUser;\n    signUpWithEmailAndPassword(credential) {\n      return createUserWithEmailAndPassword(this.auth, credential.email, credential.password);\n    }\n    logInWithEmailAndPassword(credential) {\n      return signInWithEmailAndPassword(this.auth, credential.email, credential.password);\n    }\n    logOut() {\n      return this.auth.signOut();\n    }\n    // providers\n    signInWithGoogleProvider() {\n      const provider = new GoogleAuthProvider();\n      return this.callPopUp(provider);\n    }\n    signInWithGithubProvider() {\n      const provider = new GithubAuthProvider();\n      return this.callPopUp(provider);\n    }\n    callPopUp(provider) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const result = yield signInWithPopup(_this.auth, provider);\n          return result;\n        } catch (error) {\n          return error;\n        }\n      })();\n    }\n    static ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}