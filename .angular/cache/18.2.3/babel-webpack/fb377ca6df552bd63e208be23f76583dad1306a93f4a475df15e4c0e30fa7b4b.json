{"ast":null,"code":"import { isObservable, of } from 'rxjs';\n\n/**\r\n * Given either an Observable or non-Observable value, returns either the original\r\n * Observable, or wraps it in an Observable that emits the non-Observable value.\r\n */\nfunction coerceObservable(data) {\n  if (!isObservable(data)) {\n    return of(data);\n  }\n  return data;\n}\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { coerceObservable };\n//# sourceMappingURL=private.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}